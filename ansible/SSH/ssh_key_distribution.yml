---
- hosts: all
  tasks:
    - name: Recherche et sauvgarde de la clé publique par utilisateur en local
      command: "ssh-keyscan {{ item }}"
      register: "host_keys_hostname"
      changed_when: false
      with_items: "{{ groups['all'] }}"
      delegate_to: localhost
      become: false

    - name: On envoie notre clef publique (serveur ansible) vers hôte distant
      template:
        src: "/etc/ansible/roles/ssh/templates/ssh-hosts.j2"
        dest: "/etc/ssh/ssh_known_hosts"
      become: true

    - name: Récupération du chemin pour accéder à la  clef publique/utilisateur
      command: "cat /home/{{ item }}/.ssh/id_rsa.pub"
      register: "_ssh_pub_key"
      become: true
      changed_when: false
      with_items: '{{ users_ssh_key_distribution }}'

    - name: Génération des clefs privée/publique en local
      template:
        src: "/etc/ansible/roles/ssh/templates/ssh_keys_distribution.yml.j2"
        dest: "ssh_keys_distribution.yml"
      become: false
      run_once: true
      delegate_to: localhost

- hosts: all
  vars_files:
    - ssh_keys_distribution.yml
  tasks:
    - name: distribution des clefs vers les hôtes distants
      authorized_key:
        user: "{{ item[1]['user'] }}"
        key: "{{ item[1]['key'] }}"
        state: "present"
      become: true
      with_subelements:
        - "{{ _ssh_keys_distribution }}"
        - keys
      #when: inventory_hostname != item[0]['host']
...
